// 普通递归
// function sum(n) {
//   if (n == 1) {
//     return 1;
//   }
//   // 返回前n-1项和加上当前项
//   return sum(n - 1)+ n;
// }

/**
 * 我一直觉得尾递归这个名字很具有迷惑性，我说一下我看了一些博客对尾递归的理解。
 * 首先递归这个概念应该分为形式上和计算上。
 * 形式上：自己调用自己就叫递归。
 * 计算上：有递和归两个过程，递是调用自己的过程，归是收缩并计算结果的过程。所谓“自上而下”地解决问题就在于递设置好计算链条以及计算链条中的数值的占位，归的收缩把数值填入并计算。
 * 尾递归在形式上是自我调用，但是在计算上是迭代，一步一步完成计算，归的过程只是返回结果。
 * @param {*} n
 * @param {*} res
 * @returns
 */
// 尾递归求和
function sum(n, res) {
  if (n === 0) {
    return res;
  }
  return sum(n - 1, res + n);
}

console.log(sum(3, 0));
